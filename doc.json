{
  "swagger":"2.0",
  "info":{
     "description":"This is a mock API for RadioActive Streaming Service",
     "version":"1.0.0",
     "title":"RadioActive App API Documentation",
     "termsOfService":"http://swagger.io/terms/",
     "contact":{
        "email":"iamkesington@gmail.com"
     },
     "license":{
        "name":"Apache 2.0",
        "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
     }
  },
  "host":"http://localhost:3000",
  "basePath":"/v1",
  "tags":[
     {
        "name":"radio",
        "description":"Radio stations management",
        "parameter":"radio"
     },
     {
        "name":"stream",
        "description":"Repository for radios"
     },
     {
        "name":"user",
        "description":"User management"
     }
  ],
  "schemes":[
     "http"
  ],
  "paths":{
     "/radio/{radioId}/uploadImage":{
        "post":{
           "tags":[
              "radio"
           ],
           "summary":"uploads an image",
           "description":"",
           "operationId":"uploadFile",
           "consumes":[
              "multipart/form-data"
           ],
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "name":"radioId",
                 "in":"path",
                 "description":"ID of radio to update",
                 "required":true,
                 "type":"integer",
                 "format":"int64"
              },
              {
                 "name":"additionalMetadata",
                 "in":"formData",
                 "description":"Additional data to pass to server",
                 "required":false,
                 "type":"string"
              },
              {
                 "name":"file",
                 "in":"formData",
                 "description":"file to upload",
                 "required":false,
                 "type":"file"
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/ApiResponse"
                 }
              }
           },
           "security":[
              {
                 "radiostore_auth":[
                    "write:radios",
                    "read:radios"
                 ]
              }
           ]
        }
     },
     "/radio/":{        
        "get":{
           "tags":[
              "radio"
           ],
           "summary":"Get default radio station by location",
           "description":"",
           "operationId":"getRadio",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"long_lat",
                 "description":"Longitude and lattitude of current user.",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Radio"
                 }
              }
           ],
           "responses":{
              "405":{
                 "description":"Invalid input"
              }
           },
           "security":[
              {
                 "radiostore_auth":[
                    "write:radios",
                    "read:radios"
                 ]
              }
           ]
        }
     },
     "/radio/{radioId}":{
        "get":{
           "tags":[
              "radio"
           ],
           "summary":"Find radio by ID",
           "description":"Returns a single radio",
           "operationId":"getRadioById",
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"radioId",
                 "in":"path",
                 "description":"ID of radio to return",
                 "required":true,
                 "type":"integer",
                 "format":"int64"
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/Radio"
                 }
              },
              "400":{
                 "description":"Invalid ID supplied"
              },
              "404":{
                 "description":"radio not found"
              }
           },
           "security":[
              {
                 "api_key":[
                    
                 ]
              }
           ]
        },
        "put":{
           "tags":[
              "radio"
           ],
           "summary":"Updates a radio in the store",
           "description":"",
           "operationId":"updateRadioWithForm",
           "consumes":[
              "application/x-www-form-urlencoded"
           ],
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"radioId",
                 "in":"path",
                 "description":"ID of radio that needs to be updated",
                 "required":true,
                 "type":"integer",
                 "format":"int64"
              },
              {
                 "name":"name",
                 "in":"formData",
                 "description":"Updated name of the radio",
                 "required":false,
                 "type":"string"
              },
              {
                 "name":"status",
                 "in":"formData",
                 "description":"Updated status of the radio",
                 "required":false,
                 "type":"string"
              }
           ],
           "responses":{
              "405":{
                 "description":"Invalid input"
              }
           },
           "security":[
              {
                 "radiostore_auth":[
                    "write:radios",
                    "read:radios"
                 ]
              }
           ]
        },
        "delete":{
           "tags":[
              "radio"
           ],
           "summary":"Deletes a radio",
           "description":"",
           "operationId":"deleteRadio",
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"api_key",
                 "in":"header",
                 "required":false,
                 "type":"string"
              },
              {
                 "name":"radioId",
                 "in":"path",
                 "description":"radio id to delete",
                 "required":true,
                 "type":"integer",
                 "format":"int64"
              }
           ],
           "responses":{
              "400":{
                 "description":"Invalid ID supplied"
              },
              "404":{
                 "description":"radio not found"
              }
           },
           "security":[
              {
                 "radiostore_auth":[
                    "write:radios",
                    "read:radios"
                 ]
              }
           ]
        }
     },
     "/radio/{radioId}/stream":{
       "get":{
           "tags":[
              "stream"
           ],
           "summary":"Get Active Radio Streams",
           "description":"",
           "operationId":"getRadioStream",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"radioId",
                 "description":"Radio ID",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Radio"
                 }
              }
           ],
           "responses":{
              "405":{
                 "description":"Invalid input"
              }
           },
           "security":[
              {
                 "radiostore_auth":[
                    "write:radios",
                    "read:radios"
                 ]
              }
           ]
        },
        "post":{
           "tags":[
              "stream"
           ],
           "summary":"Create a radio stream",
           "description":"",
           "operationId":"placeRadio",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"body",
                 "description":"Parameters for creating a station in the inventory",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Radio"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/Radio"
                 }
              },
              "400":{
                 "description":"Invalid Radio Parameters"
              }
           }
        }
     },
     "/radio/{radioId}/stream/{streamID}/comments":{
        "get":{
           "tags":[
              "stream"
           ],
           "summary":"Returns currently stram comments",
           "description":"",
           "operationId":"getStreamedComments",
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"path",
                 "name":"streamID",
                 "description":"",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Comment"
                 }
              }              
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "type":"object",
                    "additionalProperties":{
                       "type":"integer",
                       "format":"int32"
                    }
                 }
              }
           },
           "security":[
              {
                 "api_key":[
                    
                 ]
              }
           ]
        },
        "post":{
           "tags":[
              "stream"
           ],
           "summary":"Create room in radio livestream",
           "description":"",
           "operationId":"createRoom",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"body",
                 "description":"Parameters for creating a room in a radio stream",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Room"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/Room"
                 }
              },
              "400":{
                 "description":"Invalid Radio Parameters"
              }
           }
        },
        "delete":{
           "tags":[
              "stream"
           ],
           "summary":"Delete a radion station from inventory",
           "description":"",
           "operationId":"deleteRadio",
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"radioId",
                 "in":"path",
                 "description":"ID of the radio that needs to be deleted",
                 "required":true,
                 "type":"integer",
                 "minimum":1,
                 "format":"int64"
              }
           ],
           "responses":{
              "400":{
                 "description":"Invalid ID supplied"
              },
              "404":{
                 "description":"Radio not found"
              }
           }
        }
     },
     "/radio/{radioId}/stream/{streamID}/rooms":{
        "get":{
           "tags":[
              "stream"
           ],
           "summary":"Returns radio inventories by status",
           "description":"Returns a map of status codes to quantities",
           "operationId":"getInventory",
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"path",
                 "name":"streamID",
                 "description":"",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Comment"
                 }
              }              
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "type":"object",
                    "additionalProperties":{
                       "type":"integer",
                       "format":"int32"
                    }
                 }
              }
           },
           "security":[
              {
                 "api_key":[
                    
                 ]
              }
           ]
        },
        "post":{
           "tags":[
              "stream"
           ],
           "summary":"Create room in radio livestream",
           "description":"",
           "operationId":"createRoom",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"body",
                 "description":"Parameters for creating a room in a radio stream",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Room"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/Room"
                 }
              },
              "400":{
                 "description":"Invalid Radio Parameters"
              }
           }
        },
        "delete":{
           "tags":[
              "stream"
           ],
           "summary":"Deletes a room",
           "description":"",
           "operationId":"deleteRoom",
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "name":"api_key",
                 "in":"header",
                 "required":false,
                 "type":"string"
              },
              {
                 "name":"roomId",
                 "in":"path",
                 "description":"room id to delete",
                 "required":true,
                 "type":"integer",
                 "format":"int64"
              }
           ],
           "responses":{
              "400":{
                 "description":"Invalid ID supplied"
              },
              "404":{
                 "description":"room not found"
              }
           },
           "security":[
              {
                 "radiostore_auth":[
                    "write:radios",
                    "read:radios"
                 ]
              }
           ]
        }
     },
     
     "/radio/{radioId}/stream/{streamID}/rooms/comments":{
        "get":{
           "tags":[
              "stream"
           ],
           "summary":"Returns last 20 room comments in the current radion stream",
           "description":"",
           "operationId":"getRoomComments",
           "produces":[
              "application/json"
           ],
           "parameters":[
              
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "type":"object",
                    "additionalProperties":{
                       "type":"integer",
                       "format":"int32"
                    }
                 }
              }
           },
           "security":[
              {
                 "api_key":[
                    
                 ]
              }
           ]
        },
        "post":{
           "tags":[
              "stream"
           ],
           "summary":"Create comment in room",
           "description":"",
           "operationId":"createComment",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"body",
                 "description":"Parameters for creating a station in the inventory",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/Comment"
                 }
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/Radio"
                 }
              },
              "400":{
                 "description":"Invalid Radio Parameters"
              }
           }
        },
        "delete":{
           "tags":[
              "stream"
           ],
           "summary":"Deletes a comment",
           "description":"",
           "operationId":"deleteComment",
           "produces":[
              "application/json"
           ],
           "parameters":[
              {
                 "name":"api_key",
                 "in":"header",
                 "required":false,
                 "type":"string"
              },
              {
                 "name":"commentId",
                 "in":"path",
                 "description":"comment id to delete",
                 "required":true,
                 "type":"integer",
                 "format":"int64"
              }
           ],
           "responses":{
              "400":{
                 "description":"Invalid ID supplied"
              },
              "404":{
                 "description":"comment not found"
              }
           },
           "security":[
              {
                 "radiostore_auth":[
                    "write:radios",
                    "read:radios"
                 ]
              }
           ]
        }
     },
     "/user/createWithArray":{
        "post":{
           "tags":[
              "user"
           ],
           "summary":"Creates list of users with given input array",
           "description":"",
           "operationId":"createUsersWithArrayInput",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"body",
                 "description":"List of user object",
                 "required":true,
                 "schema":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/User"
                    }
                 }
              }
           ],
           "responses":{
              "default":{
                 "description":"successful operation"
              }
           }
        }
     },
     "/user/createWithList":{
        "post":{
           "tags":[
              "user"
           ],
           "summary":"Creates list of users with given input array",
           "description":"",
           "operationId":"createUsersWithListInput",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"body",
                 "description":"List of user object",
                 "required":true,
                 "schema":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/User"
                    }
                 }
              }
           ],
           "responses":{
              "default":{
                 "description":"successful operation"
              }
           }
        }
     },
     "/user/{username}":{
        "get":{
           "tags":[
              "user"
           ],
           "summary":"Get user by user name",
           "description":"",
           "operationId":"getUserByName",
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"username",
                 "in":"path",
                 "description":"The name that needs to be fetched. Use user1 for testing. ",
                 "required":true,
                 "type":"string"
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "schema":{
                    "$ref":"#/definitions/User"
                 }
              },
              "400":{
                 "description":"Invalid username supplied"
              },
              "404":{
                 "description":"User not found"
              }
           }
        },
        "put":{
           "tags":[
              "user"
           ],
           "summary":"Updated user",
           "description":"This can only be done by the logged in user.",
           "operationId":"updateUser",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"username",
                 "in":"path",
                 "description":"name that need to be updated",
                 "required":true,
                 "type":"string"
              },
              {
                 "in":"body",
                 "name":"body",
                 "description":"Updated user object",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/User"
                 }
              }
           ],
           "responses":{
              "400":{
                 "description":"Invalid user supplied"
              },
              "404":{
                 "description":"User not found"
              }
           }
        },
        "delete":{
           "tags":[
              "user"
           ],
           "summary":"Delete user",
           "description":"This can only be done by the logged in user.",
           "operationId":"deleteUser",
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"username",
                 "in":"path",
                 "description":"The name that needs to be deleted",
                 "required":true,
                 "type":"string"
              }
           ],
           "responses":{
              "400":{
                 "description":"Invalid username supplied"
              },
              "404":{
                 "description":"User not found"
              }
           }
        }
     },
     "/user/login":{
        "get":{
           "tags":[
              "user"
           ],
           "summary":"Logs user into the system",
           "description":"",
           "operationId":"loginUser",
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "name":"username",
                 "in":"query",
                 "description":"The user name for login",
                 "required":true,
                 "type":"string"
              },
              {
                 "name":"password",
                 "in":"query",
                 "description":"The password for login in clear text",
                 "required":true,
                 "type":"string"
              }
           ],
           "responses":{
              "200":{
                 "description":"successful operation",
                 "headers":{
                    "X-Expires-After":{
                       "type":"string",
                       "format":"date-time",
                       "description":"date in UTC when token expires"
                    },
                    "X-Rate-Limit":{
                       "type":"integer",
                       "format":"int32",
                       "description":"calls per hour allowed by the user"
                    }
                 },
                 "schema":{
                    "type":"string"
                 }
              },
              "400":{
                 "description":"Invalid username/password supplied"
              }
           }
        }
     },
     "/user/logout":{
        "get":{
           "tags":[
              "user"
           ],
           "summary":"Logs out current logged in user session",
           "description":"",
           "operationId":"logoutUser",
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              
           ],
           "responses":{
              "default":{
                 "description":"successful operation"
              }
           }
        }
     },
     "/user":{
        "post":{
           "tags":[
              "user"
           ],
           "summary":"Create user",
           "description":"This can only be done by the logged in user.",
           "operationId":"createUser",
           "consumes":[
              "application/json"
           ],
           "produces":[
              "application/json",
              "application/xml"
           ],
           "parameters":[
              {
                 "in":"body",
                 "name":"body",
                 "description":"Created user object",
                 "required":true,
                 "schema":{
                    "$ref":"#/definitions/User"
                 }
              }
           ],
           "responses":{
              "default":{
                 "description":"successful operation"
              }
           }
        }
     }
  },
  "securityDefinitions":{
     "api_key":{
        "type":"apiKey",
        "name":"api_key",
        "in":"header"
     },
     "radiostore_auth":{
        "type":"oauth2",
        "authorizationUrl":"https://radiostore.swagger.io/oauth/authorize",
        "flow":"implicit",
        "scopes":{
           "read:radios":"read your radios",
           "write:radios":"modify radios in your account"
        }
     }
  },
  "definitions":{
     "ApiResponse":{
        "type":"object",
        "properties":{
           "code":{
              "type":"integer",
              "format":"int32"
           },
           "type":{
              "type":"string"
           },
           "message":{
              "type":"string"
           }
        }
     },
     "Category":{
        "type":"object",
        "properties":{
           "id":{
              "type":"integer",
              "format":"int64"
           },
           "name":{
              "type":"string"
           }
        },
        "xml":{
           "name":"Category"
        }
     },
     "Radio":{
        "type":"object",
        "required":[
           "name",
           "photoUrls"
        ],
        "properties":{
           "id":{
              "type":"integer",
              "format":"int64"
           },
           "name":{
              "type":"string",
           },
           "streamUrl":{
              "type":"string",
           },
           "meta":{
              "type":"string",
              "format":"KY-123456"
           },
           "type":{
              "type":"string",
           },
           "category":{
              "$ref":"#/definitions/Category"
           },
           "slug":{
              "type":"string",
           },
           "images":{
              "type":"array",
              "xml":{
                 "wrapped":true
              },
              "items":{
                 "type":"string",
                 "xml":{
                    "name":"images"
                 }
              }
           },
           "tags":{
              "type":"array",
              "xml":{
                 "wrapped":true
              },
              "items":{
                 "xml":{
                    "name":"tag"
                 },
                 "$ref":"#/definitions/Radio"
              }
           },
           "status":{
              "type":"string",
              "description":"",
              "enum":[
                 "available",
                 "pending",
                 "sold"
              ]
           },
           "quantity":{
              "type":"interger",
              "example":"int64"
           }
        },
        "xml":{
           "name":"radio"
        }
     },
     "Room":{
        "type":"object",
        "properties":{
           "id":{
              "type":"integer",
              "format":"int64"
           },
           "streamId":{
              "type":"integer",
              "format":"int64"
           },
           "name":{
              "type":"string"
           }
        },
        "xml":{
           "name":"Room"
        }
     },
     "Comment":{
        "type":"object",
        "properties":{
           "id":{
              "type":"integer",
              "format":"int64"
           },
           "typeId":{
              "type":"integer",
              "format":"int64"
           },
           "body":{
              "type":"string",
           },
           "status":{
              "type":"string",
           },
        },
        "xml":{
           "name":"Comment"
        }
     },
     "User":{
        "type":"object",
        "properties":{
           "id":{
              "type":"integer",
              "format":"int64"
           },
           "username":{
              "type":"string"
           },
           "firstName":{
              "type":"string"
           },
           "lastName":{
              "type":"string"
           },
           "email":{
              "type":"string"
           },
           "password":{
              "type":"string"
           },
           "phone":{
              "type":"string"
           },
           "userStatus":{
              "type":"integer",
              "format":"int32",
              "description":"User Status"
           }
        },
        "xml":{
           "name":"User"
        }
     }
  },
  "externalDocs":{
     "description":"Find out more about Swagger",
     "url":"http://swagger.io"
  }
}
